// Code generated by go-bindata.
// sources:
// WMM.COF
// DO NOT EDIT!

package wmm

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"os"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wmmCof = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\xcb\xd5\xdb\xbc\x0e\xdc\xbb\x0a\x34\x40\x86\x00\xdf\x45\x64\x7d\xfb\xef\xe4\x1e\x1b\x4f\x4a\xb2\xcf\x1f\x9f\x2c\xf8\x89\x1c\x60\x66\x00\x42\x0a\x00\x00\x15\x2a\xb9\x40\xf8\xfd\xef\xef\xdf\xf4\x7e\xaa\x7f\x23\xfd\xc1\xf2\x87\x0a\xee\x17\x00\x02\x14\x80\x44\xbb\x95\x96\xbb\x9c\x08\x01\x46\x9e\xe0\x4f\x19\x80\x00\x90\xb0\xf5\xc2\x7b\x6d\x74\xca\x5b\x4f\x4d\x05\x24\xea\x19\x5f\x00\xf4\xc9\xf0\xfe\xb3\x78\x5c\x5b\x25\x44\x4b\x2b\x19\x88\x33\x00\xed\x45\x99\xa1\x7b\x63\x1e\x72\x28\xcd\x8c\xb2\xaa\x25\x13\x03\xe8\x2