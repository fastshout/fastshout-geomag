// Code generated by go-bindata.
// sources:
// WMM.COF
// DO NOT EDIT!

package wmm

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"os"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wmmCof = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\xcb\xd5\xdb\xbc\x0e\xdc\xbb\x0a\x34\x40\x86\x00\xdf\x45\x64\x7d\xfb\xef\xe4\x1e\x1b\x4f\x4a\xb2\xcf\x1f\x9f\x2c\xf8\x89\x1c\x60\x66\x00\x42\x0a\x00\x00\x15\x2a\xb9\x40\xf8\xfd\xef\xef\xdf\xf4\x7e\xaa\x7f\x23\xfd\xc1\xf2\x87\x0a\xee\x17\x00\x02\x14\x80\x44\xbb\x95\x96\xbb\x9c\x08\x01\x46\x9e\xe0\x4f\x19\x80\x00\x90\xb0\xf5\xc2\x7b\x6d\x74\xca\x5b\x4f\x4d\x05\x24\xea\x19\x5f\x00\xf4\xc9\xf0\xfe\xb3\x78\x5c\x5b\x25\x44\x4b\x2b\x19\x88\x33\x00\xed\x45\x99\xa1\x7b\x63\x1e\x72\x28\xcd\x8c\xb2\xaa\x25\x13\x03\xe8\x23\x6c\xcc\x91\x17\x9f\xa9\x8d\x57\x1f\x78\x26\x5d\xd5\xfc\x16\x5d\x99\x12\x60\x1d\xd5\x98\x07\xd1\x64\x58\xa1\x54\x45\x34\xd5\x85\x72\x2c\x2d\x0b\x0b\x69\xd8\x12\x7a\x9e\x0c\x60\x4a\x54\x75\x8f\x1a\x7a\xd8\x9a\x9b\x62\x51\x33\x54\xc6\x53\x67\x07\x53\x6f\x66\x6b\x42\x4f\x06\xf8\xb1\xb5\x89\x06\xd8\xa5\xaa\x21\x41\x43\x42\x7b\x28\x1a\x9a\xd8\x0a\xab\x6c\xc9\x4e\x62\xb0\x00\x86\x03\x88\x01\x92\x73\x89\x86\x84\x7d\x39\xf1\x11\xbb\x64\x33\xa0\x4a\x5d\x34\x03\xee\xed\xa2\xbb\x61\xa1\x7e\x5c\x6a\x9f\x7f\xef\x5f\x9b\x2c\x35\xd5\x5e\x8c\x78\xea\xd6\x1a\xa9\xe7\xf1\x02\xe8\x22\x3a\x51\x6d\x16\x2c\x88\x2e\xb9\x9e\xa2\xbb\x8a\x7e\x57\x1a\x2d\x57\xe8\xe9\x20\x1a\x19\xc0\xa2\x71\x4d\x61\x4e\x25\x88\x2e\x8e\xa5\xdc\x19\xc0\xa2\xb1\xc9\x5e\x42\xc2\xc8\x03\x1d\xbb\x19\xd0\xc4\x4c\xd4\xa2\xd6\xa3\xbc\xe4\x2e\x89\x06\xb1\x01\xab\x66\xdf\xdb\xcb\x8b\x5e\x87\xf2\xa1\x34\xb4\x35\x60\xf4\x87\xf6\x4e\x87\xe8\xc2\x00\x34\x00\xef\x25\xdc\x91\x78\x3b\x5d\x1a\xd6\x1a\xb3\x6a\x5c\xea\x07\x0f\xc5\x62\x5e\x0c\xa8\xe6\x8d\xec\x75\x72\x2f\x31\xde\x87\xc6\x00\x7e\x92\xec\x02\xa5\xd1\x8e\x53\x9e\x6c\x33\xc0\x5d\xd2\xec\x3b\x8a\x2e\x37\x0d\xc3\xe2\x0a\x91\xb1\xe2\xad\x59\xc1\xe1\x17\xc0\x34\x5b\x97\x3b\x78\xd8\x7a\xb9\x71\x53\x6d\x4d\x3a\x97\x20\x75\x8c\xbd\x14\xba\xa4\x33\x40\x27\xd5\x92\xbd\x84\xc3\x07\xd9\x91\x61\x30\x40\x42\xf4\x61\xa2\x29\x86\x9d\x8e\x9d\x0c\x90\xf4\xd8\x35\x2e\xd5\x38\x81\xc9\x01\xc4\x00\xdd\x1c\xca\x3c\x51\x3c\x15\x2a\x2d\x00\xf1\x26\x4d\x2d\x1c\xcd\x08\x08\xb3\x55\x00\x4a\xd2\x66\x45\x42\x7f\xa1\x1c\xed\x5d\x5f\x00\xcb\xea\x40\xf5\x3f\xd5\x61\x59\x7b\x7b\x06\x58\x47\x4f\x3b\x56\x32\x08\x73\x9c\xa2\x2f\x61\x37\x5b\xcf\x0c\x93\x01\xd5\xf6\xd4\xe0\xe3\x2d\xd2\x4f\x5b\x97\xb5\x37\xe9\xa0\x7e\xbf\x09\x9f\x2b\xdd\x19\xa0\xed\x6d\x44\xb0\xb9\x4b\xe5\x68\x2b\x06\x88\x37\x3e\x35\xa0\xc6\x9b\x1f\x28\x49\x86\x29\x44\xac\x97\xd2\x88\x19\x42\x1d\x1a\x03\x96\xa7\x94\xad\x43\xf4\x65\x6a\x6c\x2b\x1c\xf4\xfb\x97\xc0\x43\xe1\xb6\x17\x6e\x59\x2f\xd5\x58\x07\x3a\x45\x6f\xbb\x40\x60\xef\x4e\xc4\x58\xde\xa0\x81\x18\xa0\x85\xf3\x8b\xb9\x9f\x34\x24\x16\xbd\xed\x02\xf9\x1b\x36\xf5\xa3\x81\x4e\x97\xb6\x16\x2e\xa1\x31\x0f\xdf\x0b\xf7\xb9\xb4\xad\x70\xe0\xcc\x67\xa4\x14\xf4\x8b\x4b\xd3\x5c\xda\x4f\xc4\x83\xc3\x22\x5a\x0b\xb7\xb3\xcb\xef\x8f\x94\x3a\x03\xb6\x9c\xf2\x8b\xb9\xe3\x6